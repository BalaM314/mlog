op mul _cookie @thisx @maph
op add _cookie @thisy @cookie
set author BalaM314
set name example_program
set _stdout message1
set _stderr message2
set _building_type @pulse-conduit
set _stack1 @counter
op add _stack1 _stack1 2
jump _count_buildings always
set _unit_type @omura
set _stack1 @counter
op add _stack1 _stack1 2
jump _count_units always
print "Number of "
print _building_type
print "s: "
print _num_buildings
print "\nNumber of "
print _unit_type
print "s: "
print _num_units
printflush _stdout
jump move_unit notEqual @unit null
set _unit_type @flare
set _stack1 @counter
op add _stack1 _stack1 2
jump _flag_unit always
move_unit:
ucontrol move @thisx @thisy 0 0 0
ucontrol target @thisx @thisy 1 0 0
set _err "I don't know what to do next"
jump _err always
end
#functions

_count_buildings:
set _num_buildings 0
set __i -1
__next_loop:
op add __i __i 1
getlink __building __i
sensor __building_type __building @type
jump __check_exit_loop notEqual _building_type __building_type
op add _num_buildings _num_buildings 1
__check_exit_loop:
jump __next_loop lessThan __i @links
set @counter _stack1
end

_count_units:
set _num_units -1
__begin_loop:
op add _num_units _num_units 1
ubind _unit_type
sensor __dead @unit @dead
jump __exit_loop equal __dead true
jump __check_exit_loop notEqual _num_units 0
set __firstUnit @unit
jump __begin_loop always
__check_exit_loop:
jump __begin_loop notEqual @unit __firstUnit
__exit_loop:
set @counter _stack1
end

_err:
print "[red] An error has occured: "
print _err
print "\nMake sure all necessary blocks"
print " are linked and units exist."
printflush _stderr
end
end

_flag_unit:
ubind _unit_type
sensor dead @unit @dead
jump _flag_unit notEqual dead false
sensor __flag @unit @flag
sensor __controlled @unit @controlled
op equal __unitUnflagged __flag 0
op equal __unitHasOurFlag __flag _cookie
op equal __unitNotControlled __controlled false
op or __unitFlagOk __unitUnflagged __unitHasOurFlag
jump _flag_unit notEqual __unitFlagOk true
jump _flag_unit notEqual __unitNotControlled true
ucontrol flag _cookie
set @counter _stack1
end

draw linerect 0 0 50 50 31#Error
draw image @copper 50 50#Error
ubind "poly"#Error
jump -1 never#Error
end
#stdlib

_count_buildings:
set _num_buildings 0
set __count_block_type__i -1
__count_block_type__next_loop:
op add __count_block_type__i __count_block_type__i 1
getlink __count_block_type__building __count_block_type__i
sensor __count_block_type__building_type __count_block_type__building @type
jump __count_block_type__check_exit_loop notEqual _building_type __count_block_type__building_type
op add _num_buildings _num_buildings 1
__count_block_type__check_exit_loop:
jump __count_block_type__next_loop lessThan __count_block_type__i @links
set @counter _stack1
end

_count_units:
set _num_units -1
__count_unit__begin_loop:
op add _num_units _num_units 1
ubind _unit_type
sensor __count_unit__dead @unit @dead
jump __count_unit__exit_loop equal __count_unit__dead true
jump __count_unit__check_exit_loop notEqual _num_units 0
set __count_unit__firstUnit @unit
jump __count_unit__begin_loop always
__count_unit__check_exit_loop:
jump __count_unit__begin_loop notEqual @unit __count_unit__firstUnit
__count_unit__exit_loop:
set @counter _stack1
end

_err:
print "[red] An error has occured: "
print _err
print "\nMake sure all necessary blocks"
print " are linked and units exist."
printflush _stderr
end
end

_flag_unit:
ubind _unit_type
sensor dead @unit @dead
jump _flag_unit notEqual dead false
sensor __flag_unit__flag @unit @flag
sensor __flag_unit__controlled @unit @controlled
op equal __flag_unit__unitUnflagged __flag_unit__flag 0
op equal __flag_unit__unitHasOurFlag __flag_unit__flag _cookie
op equal __flag_unit__unitNotControlled __flag_unit__controlled false
op or __flag_unit__unitFlagOk __flag_unit__unitUnflagged __flag_unit__unitHasOurFlag
jump _flag_unit notEqual __flag_unit__unitFlagOk true
jump _flag_unit notEqual __flag_unit__unitNotControlled true
ucontrol flag _cookie#Error
set @counter _stack1