print "$name by $authors"
set stdout message1
set tickStep 30
print "timeStep specifies the time in ticks between dps measurements."
print "Low timeStep will allow more frequent but less accurate readings."
printflush null
jump get_unit

no_unit:
	print "[scarlet]No enemy unit found. An enemy unit is required to measure DPS.[]"
	print "\n$name by $authors"
	printflush stdout
get_unit:
	radar enemy distance 1 @this enemy
	jump no_unit enemy == null
	print "[green]Found enemy unit "
	print enemy
	print ".\n$name by $authors"
	printflush stdout
	found_unit:

main_loop:
	sensor enemy.firstHealth enemy @health
	sensor enemy.dead
	set targetTick @tick + tickStep
	wait_for_tick:
		jump wait_for_tick @tick < targetTick
	calc_dps:
		sensor enemy.health
		sensor enemy.dead
		jump enemy_died enemy.dead == true
		set damage enemy.firstHealth - enemy.health
		set dpt damage / tickStep
		set dps dpt * 60
	print_dps:
		print "DPS is [yellow]"
		print dps
		print "[].\n$name by $authors."
		printflush stdout
	jump main_loop
	enemy_died:
		print "[scarlet]Enemy unit died!\n$name by $authors"
		printflush message1
		wait 1
