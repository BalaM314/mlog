op mul cookie @thisx @maph
op add cookie @thisy cookie
set taxiUnitType @mega
set targetUnitType @spiroct
set reconstructor reconstructor1
sensor reconstructor.x reconstructor @x
sensor reconstructor.y reconstructor @y
jump bind_target always 0 0
target_unbound:
print "[red]Target unit unbound."
printflush message1
wait 0.5
jump bind_target always 0 0
payload_fault:
print "[scarlet]Payload fault!"
printflush message1
wait 0.5
bind_target:
print "Binding a unit..."
printflush message1
ubind targetUnitType
sensor @unit.flag @unit @flag
jump bind_target notEqual @unit.flag 0
sensor @unit.controlled @unit @controlled
jump bind_target greaterThan @unit.controlled 1
ucontrol flag cookie
set targetUnit @unit
sensor taxiUnit.dead taxiUnit @dead
jump bind_taxi notEqual taxiUnit.dead false
jump move_to_target always 0 0
taxi_unbound:
print "[red]Taxi unit unbound."
printflush message1
wait 0.5
bind_taxi:
print "Binding a taxi unit..."
printflush message1
ubind taxiUnitType
sensor @unit.flag @unit @flag
jump bind_taxi notEqual @unit.flag 0
sensor @unit.controlled @unit @controlled
jump bind_taxi greaterThan @unit.controlled 1
sensor @unit.payloadCount @unit @payloadCount
jump bind_taxi notEqual @unit.payloadCount 0
ucontrol flag cookie
set taxiUnit @unit
move_to_target:
ubind targetUnit
ucontrol idle
sensor targetUnit.x targetUnit @x
sensor targetUnit.y targetUnit @y
sensor targetUnit.controlled targetUnit @controlled
ubind taxiUnit
sensor taxiUnit.payloadCount taxiUnit @payloadCount
jump taxi_has_payload notEqual taxiUnit.payloadCount 0
ucontrol move targetUnit.x targetUnit.y
sensor taxiUnit.dead taxiUnit @dead
sensor taxiUnit.controlled taxiUnit @controlled
jump taxi_unbound equal taxiUnit.dead true
jump taxi_unbound greaterThan taxiUnit.controlled 1
jump target_unbound greaterThan targetUnit.controlled 1
sensor taxiUnit.x taxiUnit @x
sensor taxiUnit.y taxiUnit @y
print "Moving taxi unit to target. ("
print taxiUnit.x
print ", "
print taxiUnit.y
print ")"
printflush message1
ucontrol within targetUnit.x targetUnit.y 2 close
jump move_to_target equal close false
ucontrol payTake true
jump move_to_target always 0 0
taxi_has_payload:
sensor taxiUnit.payloadType taxiUnit @payloadType
jump payload_fault notEqual taxiUnit.payloadType targetUnitType
move_to_recon:
ucontrol move reconstructor.x reconstructor.y
sensor @unit.dead @unit @dead
sensor @unit.controlled @unit @controlled
jump target_unbound equal @unit.dead true
jump target_unbound greaterThan @unit.controlled 1
sensor @unit.x @unit @x
sensor @unit.y @unit @y
print "Moving taxi unit to reconstructor. ("
print @unit.x
print ", "
print @unit.y
print ")"
printflush message1
ucontrol within reconstructor.x reconstructor.y 2 close
jump move_to_recon equal close false
sensor reconstructor.config reconstructor @config
jump move_to_recon notEqual reconstructor.config null
wait 0.5
ucontrol payDrop
jump bind_target always 0 0
end
print "Made with mlogx"
print "github.com/BalaM314/mlogx/"