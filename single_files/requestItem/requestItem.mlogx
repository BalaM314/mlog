#require cookie
print "Request Item by [#3141FF]BalaM314"
print "Settings below"
set unitType @flare
set itemDropRadius 2 #It's actually 5.625
set pickupItem @copper
set maxItemsToTake 31415
set output null #null to auto detect
print "End of settings"
restart:
printflush null
print "Starting...\n\n[white]$name by $authors"
printflush message1
sensor output.x
sensor output.y


main_loop:

	get_output:
		jump output_got notEqual output null
		print "Determining output building...\n\n[white]$name by $authors"
		printflush message1
		set i 0
		get_output_loop:
			getlink outputBuilding i
			sensor outputBuilding.itemCapacity
			jump output_found outputBuilding.itemCapacity != 0
			op add i 1
			jump get_output_loop lessThan i @links

		no_output_building:
			print "[red]Error: no valid linked output buildings.\n\n[white]$name by $authors"
			printflush message1
			wait 3
			jump restart
		output_found:
		set output outputBuilding
		sensor output.x
		sensor output.y
		
	output_got:

	get_item:
		sensor sorterConfig sorter1 @config
		jump item_got equal sorterConfig null
		set pickupItem sorterConfig
	item_got:
	
	jump check_unit
	unit_ok:

	determine_action:
		sensor @unit.firstItem
		jump move_to_core @unit.firstItem != pickupItem
		#the unit has the correct item, so go to the destination
		jump move_to_destination

	move_to_core:
		print "Moving unit to core\n\n[white]$name by $authors"
		printflush message1
		ulocate core
		ucontrol move core.x core.y

	drop_item:
		ucontrol itemDrop core maxItemsToTake

	grab_item_from_core:
		ucontrol itemTake core pickupItem maxItemsToTake
		jump main_loop

	move_to_destination:
		print "Moving unit to destination\n\n[white]$name by $authors"
		printflush message1
		ucontrol move output.x output.y

	drop_item_to_destination:
		ucontrol itemDrop output maxItemsToTake
	

	jump main_loop

	check_unit:
		sensor @unit.dead
		jump bind_unit @unit == null
		jump unit_died @unit.dead == true
		sensor @unit.controlled
		sensor @unit.flag
		jump unit_controlled @unit.controlled >= @ctrlPlayer
		jump unit_ok @unit.flag == cookie
		jump unit_ok @unit.flag == 0
	
	unit_flagged:
	print "[scarlet]Error: unit flag changed.\n\n[white]$name by $authors"
	printflush message1
	jump bind_unit
	unit_died:
	print "[scarlet]Error: unit died.\n\n[white]$name by $authors"
	printflush message1
	jump bind_unit
	unit_controlled:
	print "[scarlet]Error: unit was controlled.\n\n[white]$name by $authors"
	printflush message1
	jump bind_unit

	bind_unit:
		ubind unitType
		jump no_units @unit == null
		sensor @unit.controlled
		sensor @unit.flag
		jump bind_unit @unit.controlled >= @ctrlPlayer
		jump flag_ok @unit.flag == 0
		jump flag_ok @unit.flag == cookie
		flag_ok:
		ucontrol flag cookie
		jump unit_ok
	
	no_units:
		printf "[red]Error: no units of type {unitType} exist.\n\n[white]$name by $authors"
		printflush message1
		wait 3
