#require cookie
#author BalaM314
#Request Item by BalaM314.
set unitType @flare
set itemDropRadius 2#It's actually 5.625
set pickupItem @copper
set maxItemsToTake 100


get_core:
#Don't bother to check the flag, this unit won't be moved.
ubind @flare
sensor unit.dead @unit @dead
jump locate_core notEqual unit.dead true
ubind @mono
sensor unit.dead @unit @dead
jump locate_core notEqual unit.dead true
throw "No units, unable to locate core."

locate_core:
ulocate building core false coreX coreY _ core
ubind null



main_loop:

bind_unit:
	sensor unit.dead @unit @dead
	jump check_items notEqual unit.dead true
	bind_new_unit:
	uflag unitType

check_items:
	ucontrol idle
	ucontrol flag cookie
	sensor itemsInContainer container1 pickupItem
	sensor itemCapacity container1 @itemCapacity
	jump main_loop equal itemsInContainer itemCapacity
	jump move_unit_to_core always

move_unit_to_core:
	sensor unit.dead @unit @dead
	sensor unit.controller @unit @controller
	jump bind_new_unit equal unit.dead true
	jump bind_new_unit notEqual unit.controller @this
	ucontrol move coreX coreY
	sensor unit.x @unit @x
	sensor unit.y @unit @y
	op sub xDiff_from_core unit.x coreX
	op sub yDiff_from_core unit.y coreY
	op abs xDiff_from_core
	op abs yDiff_from_core
	jump move_unit_to_core greaterThan xDiff_from_core itemDropRadius
	jump move_unit_to_core greaterThan yDiff_from_core itemDropRadius

drop_current_item:
	sensor currentItem @unit @firstItem
	wait 0.5
	ucontrol itemDrop core 1e10

pickup_item:
	sensor unit.dead @unit @dead
	sensor unit.controller @unit @controller
	jump bind_new_unit equal unit.dead true
	jump bind_new_unit notEqual unit.controller @this
	wait 0.5
	ucontrol itemTake core pickupItem maxItemsToTake
	sensor itemsInUnit @unit pickupItem
	jump drop_current_item equal itemsInUnit 0

move_unit_to_dest:
	sensor unit.dead @unit @dead
	sensor unit.controller @unit @controller
	jump bind_new_unit equal unit.dead true
	jump bind_new_unit notEqual unit.controller @this
	ucontrol move @thisx @thisy
	sensor unit.x @unit @x
	sensor unit.y @unit @y
	op sub xDiff_from_dest unit.x @thisx
	op sub yDiff_from_dest unit.y @thisy
	op abs xDiff_from_dest
	op abs yDiff_from_dest
	jump move_unit_to_dest greaterThan xDiff_from_dest itemDropRadius
	jump move_unit_to_dest greaterThan yDiff_from_dest itemDropRadius

drop_item:
	wait 0.5
	ucontrol itemDrop container1 maxItemsToTake

jump main_loop always