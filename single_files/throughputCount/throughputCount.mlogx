#Item ThroughputCounter by BalaM314

init:
	set storage container1
	set stdout message1
	print "Initializing...\nItem Throughput Counter by [#3141FF]BalaM314[]"
	printflush stdout

no_storage:
	sensor storage.dead
	jump storage_found storage.dead == false
	print "Identifying storage...\nItem Throughput Counter by [#3141FF]BalaM314[]"
	printflush stdout
	set i 0
	getlink_loop:
		getlink link i
		sensor link.type
		jump storage_found link.type == @container
		jump storage_found link.type == @vault
		op add i 1
		jump getlink_loop i < @links
	jump no_storage

	storage_found:
		set storage link
		sensor storage.itemCapacity


no_items:
	print "Item throughput counter by [#3141FF]BalaM314[white]\n[red]Waiting for items..."
	printflush stdout
	sensor storage.totalItems
	jump no_items storage.totalItems == 0
start_timer:
	set timer @time
count_items:
	sensor storage.totalItems
	printf "[blue]Items received: {storage.totalItems}"
	printflush stdout
	jump reset storage == null
	jump count_items storage.totalItems != storage.itemCapacity
calculate_time:
	set timePassedMs @time - timer
	set timePassed timePassedMs / 1000
	set fillSpeed storage.itemCapacity / timePassed
	printf "[green]{fillSpeed} items/second\nWaiting for reset:"
	printflush stdout
wait_for_reset:
	sensor storage.dead
	jump reset equal storage.dead true
	jump reset equal storage null
	jump wait_for_reset
	reset:
	jump no_storage