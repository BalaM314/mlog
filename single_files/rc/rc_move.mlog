print "Overkill RC by BalaM314"
print "Source code available at https://github.com/BalaM314/mlog/tree/main/single_files/rc/"
print "Movement module"
set minHealth 0.8
print "Rest of settings in micro proc"
set quickLoops 80
set 0 0
set 1 1
set 2 2
set 3 3
set 4 4
set 5 5
set 6 6
set 7 7
set 8 8
set 9 9
set 10 10
set logicItemTakeRadius 5
restart:
jump restart equal sorter1 null
jump restart equal cell1 null
set bombingItemSorter sorter1
set cell cell1
init_read_cell:
read enabled cell 0
read loading cell 1
read unit.id cell 2
lookup unit unitType unit.id
read dest.x cell 3
read dest.y cell 4
read shoot.x cell 5
read shoot.y cell 6
read shouldFire cell 7
read approachDistance cell 8
read healing cell 10
sensor bombingItem bombingItemSorter @config
jump init_read_cell equal enabled false
ubind unitType
sensor unit.range @unit @range
sensor unit.itemCapacity @unit @itemCapacity
sensor unit.maxHealth @unit @maxHealth
ulocate building core false _ core.x core.y core.exists core
set i 0
send_commands_loop:
bind_unit:
ubind unitType
sensor unit.flag @unit @flag
jump bind_unit notEqual unit.flag 0
jump load equal loading true
jump heal equal healing true
send_commands:
ucontrol approach dest.x dest.y approachDistance
ucontrol within shoot.x shoot.y unit.range target_position
jump target_self equal target_position false
target_position:
sensor unit.x @unit @x
sensor unit.y @unit @y
op sub diffrence.x unit.x shoot.x
op sub diffrence.y unit.y shoot.y
op angle shoot.angle diffrence.x diffrence.y
op cos shoot.x.normalized shoot.x.normalized shoot.angle
op sin shoot.y.normalized shoot.y.normalized shoot.angle
op mul shooting.x shoot.x.normalized unitRange
op add shooting.x shooting.x unit.x
op mul shooting.y shoot.y.normalized unitRange
op add shooting.y shooting.y unit.y
ucontrol target shooting.x shooting.y shouldFire
jump end_send_commands_loop always
target_self:
ucontrol targetp @unit shouldFire
jump end_send_commands_loop always
load:
sensor unit.firstItem @unit @firstItem
sensor unit.totalItems @unit @totalItems
jump take_item equal unit.firstItem null
jump drop_item notEqual unit.firstItem bombingItem
jump take_item notEqual unit.totalItems unit.itemCapacity
jump send_commands always
heal:
sensor unit.health @unit @health
op div unit.healthPercentage unit.health unit.maxHealth
jump send_commands greaterThan unit.healthPercentage minHealth
ulocate building repair false _ healTurret.x healTurret.y isFound healTurret
jump send_commands equal isFound false
ucontrol move healTurret.x healTurret.y
jump end_send_commands_loop always
drop_item:
ucontrol itemDrop core 9999
take_item:
ucontrol move core.x core.y
ucontrol itemTake core bombingItem 9999
jump end_send_commands_loop always
end_send_commands_loop:
op add i i 1
jump send_commands_loop lessThan i quickLoops
end
print "Made with mlogx"
print "github.com/BalaM314/mlogx/"