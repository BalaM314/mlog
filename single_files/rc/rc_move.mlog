print "Overkill RC by BalaM314, Someone'sShade"
print "Source code available at https://github.com/BalaM314/mlog/tree/main/single_files/rc/"
print "Movement module"
set minHealthFrac 0.8
set unitOverride null
print "Rest of settings in micro proc"
set quickLoops 5
set unitControlLoops 10
set logicItemTakeRadius 5
get_wait_time:
op add pos @thisx @thisy
op mod pos pos 20
op div waitTime pos 800
op add waitTime waitTime 0.01
restart:
jump restart equal sorter1 null
jump restart equal cell1 null
set bombingItemSorter sorter1
set cell cell1
init_read_cell:
wait waitTime
read enabled cell 0
read loading cell 1
read unit.id cell 2
read dest.x cell 3
read dest.y cell 4
read shoot.x cell 5
read shoot.y cell 6
read shouldFire cell 7
read approachDistance cell 8
read healing cell 10
read overrange cell 11
jump init_read_cell equal enabled false
get_static_vars:
sensor bombingItem bombingItemSorter @config
lookup unit unitType unit.id
jump disable_overrange equal unitType @quad
jump disable_overrange equal unitType @horizon
jump overrange_disabled always 0 0
disable_overrange:
set overrange 0
overrange_disabled:
jump no_unit_override equal unitOverride null
set unitType unitOverride
no_unit_override:
ubind unitType
sensor unit.range @unit @range
sensor unit.itemCapacity @unit @itemCapacity
sensor unit.maxHealth @unit @maxHealth
op mul minHealth unit.maxHealth minHealthFrac
set j 0
quick_loop:
set i 0
send_commands_loop:
bind_unit:
ubind unitType
sensor unit.flag @unit @flag
jump bind_unit notEqual unit.flag 0
jump load equal loading true
loaded:
jump heal equal healing true
healed:
send_commands:
ucontrol approach dest.x dest.y approachDistance
ucontrol within shoot.x shoot.y unit.range unit.targetInRange
jump target_position equal unit.targetInRange true
jump target_self equal overrange false
target_overrange:
sensor unit.x @unit @x
sensor unit.y @unit @y
op sub difference.x shoot.x unit.x
op sub difference.y shoot.y unit.y
op angle shoot.angle difference.x difference.y
op cos shoot.normalized.x shoot.angle
op sin shoot.normalized.y shoot.angle
op mul shooting.x shoot.normalized.x unit.range
op mul shooting.y shoot.normalized.y unit.range
op add shooting.x shooting.x unit.x
op add shooting.y shooting.y unit.y
ucontrol target shooting.x shooting.y shouldFire
op add i i 1
jump send_commands_loop lessThan i unitControlLoops
op add j j 1
jump send_commands_loop lessThan j quickLoops
jump init_read_cell always 0 0
target_position:
ucontrol target shoot.x shoot.y shouldFire
op add i i 1
jump send_commands_loop lessThan i unitControlLoops
op add j j 1
jump send_commands_loop lessThan j quickLoops
jump init_read_cell always 0 0
target_self:
ucontrol targetp @unit shouldFire
op add i i 1
jump send_commands_loop lessThan i unitControlLoops
op add j j 1
jump send_commands_loop lessThan j quickLoops
jump init_read_cell always 0 0
load:
sensor unit.firstItem @unit @firstItem
sensor unit.totalItems @unit @totalItems
jump handle_take_item notEqual unit.firstItem bombingItem
jump loaded equal unit.totalItems unit.itemCapacity
handle_take_item:
move_to_core:
ulocate building core false _ core.x core.y core.exists core
ucontrol move core.x core.y
jump item_cleared equal unit.firstItem null
drop_item:
ucontrol itemDrop core 9999
item_cleared:
ucontrol itemTake core bombingItem 9999
op add i i 1
jump send_commands_loop lessThan i unitControlLoops
op add j j 1
jump send_commands_loop lessThan j quickLoops
jump init_read_cell always 0 0
heal:
sensor unit.health @unit @health
jump healed greaterThan unit.health minHealth
ulocate building repair false _ healTurret.x healTurret.y isFound healTurret
jump healed equal isFound false
ucontrol move healTurret.x healTurret.y
op add i i 1
jump send_commands_loop lessThan i unitControlLoops
op add j j 1
jump send_commands_loop lessThan j quickLoops
jump init_read_cell always 0 0
end
print "Made with mlogx"
print "github.com/BalaM314/mlogx/"