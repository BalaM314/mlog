print "Overkill RC by BalaM314"
print "Source code available at https://github.com/BalaM314/mlog/tree/main/single_files/rc/"
print "Control module"
print "Configurable settings below:"
set idle.x @thisx
set idle.y @thisy
set unitIdOverride 0
set idleApproachDistance 18.5
print "Do not change below"
set quickLoops 16
set memcellpos.enabled 0
set memcellpos.loading 1
set memcellpos.unitId 2
set memcellpos.destX 3
set memcellpos.destY 4
set memcellpos.shootX 5
set memcellpos.shootY 6
set memcellpos.shouldFire 7
set memcellpos.approachDistance 8
set memcellpos.secondaryUnitId 9
op mul idleFireInterval 10 1000
restart:
jump restart equal switch1 null
jump restart equal switch2 null
jump restart equal switch3 null
jump restart equal cell1 null
set enabledSwitch switch3
set loadingSwitch switch2
set longrangeSwitch switch1
set cell cell1
main_loop:
get_settings:
sensor isActive arc1 @controlled
sensor enabled enabledSwitch @enabled
sensor loading loadingSwitch @enabled
sensor longrange longrangeSwitch @enabled
jump unitId_defined notEqual unitIdOverride 0
sensor sorter.item sorter1 @config
jump quad equal sorter.item @titanium
jump zenith equal sorter.item @metaglass
jump horizon equal sorter.item @lead
jump antumbra equal sorter.item @plastanium
jump eclipse equal sorter.item @surge-alloy
jump flare equal sorter.item @scrap
no_unit:
set enabled false
jump write_values always
quad:
set unitId 23
jump write_values always
zenith:
set unitId 17
jump write_values always
horizon:
set unitId 16
jump write_values always
antumbra:
set unitId 18
jump write_values always
eclipse:
set unitId 19
jump write_values always
flare:
set unitId 15
jump write_values always
unitId_defined:
set unitId unitIdOverride
write_values:
jump idle equal isActive false
write_slow_values:
set i 0
write unitId cell memcellpos.unitId
write unitId cell memcellpos.secondaryUnitId
write enabled cell memcellpos.enabled
write loading cell memcellpos.loading
sensor arc.shooting arc1 @shooting
write true cell memcellpos.shouldFire
jump longrange_quick_loop equal longrange true
jump approach_far equal arc.shooting true
approach_close:
write 1 cell memcellpos.approachDistance
jump approach_chosen always
approach_far:
write 15 cell memcellpos.approachDistance
approach_chosen:
quick_loop:
get_variables:
sensor arc.x arc1 @shootX
sensor arc.y arc1 @shootY
write:
write arc.x cell memcellpos.destX
write arc.y cell memcellpos.destY
write arc.x cell memcellpos.shootX
write arc.y cell memcellpos.shootY
jump quick_loop lessThan i quickLoops
jump main_loop always
end_quick_loop:
op add i i 1
jump quick_loop lessThan i quickLoops
jump main_loop always
longrange_quick_loop:
longrange_get_variables:
sensor arc.x arc1 @shootX
sensor arc.y arc1 @shootY
sensor arc.shooting arc1 @shooting
longrange_write:
write_dest:
write arc.x cell memcellpos.destX
write arc.y cell memcellpos.destY
jump longrange_end_quick_loop always
write_target:
write arc.x cell memcellpos.shootX
write arc.y cell memcellpos.shootY
longrange_end_quick_loop:
op add i i 1
jump longrange_quick_loop lessThan i quickLoops
jump main_loop always
idle:
write idle.x cell memcellpos.destX
write idle.y cell memcellpos.destY
write idle.x cell memcellpos.shootX
write idle.y cell memcellpos.shootY
write unitId cell memcellpos.unitId
write enabled cell memcellpos.enabled
write loading cell memcellpos.loading
write idleApproachDistance cell memcellpos.approachDistance
op mod frames @time idleFireInterval
op lessThan shouldFire frames 500
write shouldFire cell memcellpos.shouldFire
jump quick_loop lessThan i quickLoops
jump main_loop always
end
print "Made with mlogx"
print "github.com/BalaM314/mlogx/"