#Overkill RC by BalaM314
#Control module
set idle.x @thisx
set idle.y @thisy
set unitType.none 420
set quickLoops 16 #The amount of quick loops to perform before rereading settings.
set memcellpos.enabled 0
set memcellpos.unitType 1
set memcellpos.x 2
set memcellpos.y 3
set memcellpos.approachDistance 4
main_loop:

get_unit_type:
	sensor isActive arc1 @controlled
	sensor sorter.item sorter1 @config
	jump quad equal sorter.item @titanium
	jump zenith equal sorter.item @metaglass
	jump horizon equal sorter.item @lead
	jump antumbra equal sorter.item @plastanium
	jump eclipse equal sorter.item @surge-alloy
	jump flare equal sorter.item @scrap
	
	no_unit:
		set unitType unitType.none
		jump write always
	quad:
		set unitType 23
		jump write always
	zenith:
		set unitType 17
		jump write always
	horizon:
		set unitType 16
		jump write always
	antumbra:
		set unitType 18
		jump write always
	eclipse:
		set unitType 19
		jump write always
	flare:
		set unitType 15
		jump write always

#A quick loop, because we don't need to check the unit type every loop.
set i 0
quick_loop:

get_variables:
	sensor arc.x arc1 @shootX
	sensor arc.y arc1 @shootY

write:
	set _ "Replace this with `set unitType [id]` if you want to use a different unit."
	jump idle equal isActive false
	write unitType cell1 memcellpos.unitType
	write arc.x cell1 memcellpos.x
	write arc.y cell1 memcellpos.y
	write 1 cell1 memcellpos.approachDistance
	op add i i 1
	jump quick_loop lessThan i quickLoops
	jump main_loop always
idle:
	write unitType cell1 memcellpos.unitType
	write idle.x cell1 memcellpos.x
	write idle.y cell1 memcellpos.y
	write 24 cell1 memcellpos.approachDistance
	jump quick_loop lessThan i quickLoops
	jump main_loop always