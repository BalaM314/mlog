print "Code by SBytes"
print "For BalaM314's Ultimate RC"
op mul flag @thisx @maph
op add flag flag @thisy
sensor projector1.x projector1 @x
sensor projector1.y projector1 @y
sensor conveyor1.x conveyor1 @x
sensor conveyor1.y conveyor1 @y
start:
unitLoop:
op mul counterJump unitIndex 2
op add @counter @counter counterJump
ubind unitRef1
jump unitSel_end always 0 0
ubind unitRef2
jump unitSel_end always 0 0
ubind unitRef3
jump unitSel_end always 0 0
ubind unitRef4
unitSel_end:
sensor unit.flag @unit @flag
jump bind notEqual unit.flag flag
sensor unit.controlled @unit @controlled
jump bind greaterThanEq unit.controlled 2
sensor unit.dead @unit @dead
jump bind_end equal unit.dead 0
bind:
op add bindAttempts bindAttempts 1
jump bind_skip greaterThanEq bindAttempts 16
ubind @flare
sensor unit.flag @unit @flag
jump bind notEqual unit.flag 0
sensor unit.controlled @unit @controlled
jump bind greaterThanEq unit.controlled 2
ucontrol flag flag
op add @counter @counter counterJump
set unitRef1 @unit
jump unitSet_end always 0 0
set unitRef2 @unit
jump unitSet_end always 0 0
set unitRef3 @unit
jump unitSet_end always 0 0
set unitRef4 @unit
unitSet_end:
jump bind_end always 0 0
bind_skip:
set bindAttempts 0
jump nextUnit always 0 0
bind_end:
ulocate building core false _ core.x core.y core.found core
jump coreRadius_end equal core cached.core
set cached.core core
sensor core.size core @size
jump coreRadius_end equal core.size cached.core.size
set cached.core.size core.size
op mul coreWithinRadius 0.375 core.size
op add coreWithinRadius 5.625 coreWithinRadius
op sub coreApproachRadius coreWithinRadius 0.5
coreRadius_end:
sensor unit.firstItem @unit @firstItem
sensor conveyor1.titanium conveyor1 @titanium
sensor projector1.phase-fabric projector1 @phase-fabric
jump itemdrop_titanium equal unit.firstItem @titanium
jump itemdrop_phase equal unit.firstItem @phase-fabric
jump itemtake always 0 0
itemdrop_titanium:
ucontrol approach conveyor1.x conveyor1.y 5.75
ucontrol within conveyor1.x conveyor1.y 6.125 projectorIsWithin
jump nextUnit equal projectorIsWithin 0
ucontrol itemDrop conveyor1 999
sensor unit.firstItem @unit @firstItem
jump nextUnit equal unit.firstItem null
jump nextUnit always 0 0
itemdrop_phase:
ucontrol approach projector1.x projector1.y 6.25
ucontrol within projector1.x projector1.y 6.625 projectorIsWithin
jump nextUnit equal projectorIsWithin 0
ucontrol itemDrop projector1 999
sensor unit.firstItem @unit @firstItem
jump itemdrop_phase_still notEqual unit.firstItem null
set takingPhase 0
ucontrol approach core.x core.y coreApproachRadius
itemdrop_phase_still:
jump nextUnit always 0 0
itemtake:
ucontrol approach core.x core.y coreApproachRadius
ucontrol within core.x core.y coreWithinRadius coreIsWithin
jump nextUnit equal coreIsWithin 0
jump itemtake_titanium equal takingPhase 1
ucontrol itemTake core @phase-fabric 999
sensor unit.firstItem @unit @firstItem
jump itemtake_end equal unit.firstItem null
ucontrol approach projector1.x projector1.y 6.25
set takingPhase 1
jump itemtake_end always 0 0
itemtake_titanium:
ucontrol itemTake core @titanium 999
sensor unit.firstItem @unit @firstItem
jump itemtake_end equal unit.firstItem null
ucontrol approach conveyor1.x conveyor1.y 5.75
jump itemtake_end always 0 0
itemtake_end:
nextUnit:
set bindAttempts 0
op add unitIndex unitIndex 1
jump unitLoop lessThan unitIndex 4
set unitIndex 0
jump start always 0 0
ulocate building core false _ core.x core.y core.found core
jump idle_coreRadius_end equal core cached.core
set cached.core core
sensor core.size core @size
jump idle_coreRadius_end equal core.size cached.core.size
set cached.core.size core.size
op mul coreWithinRadius 0.375 core.size
op add coreWithinRadius 5.625 coreWithinRadius
op sub coreApproachRadius coreWithinRadius 0.5
idle_coreRadius_end:
ucontrol approach core.x core.y coreApproachRadius
jump unitLoop always 0 0
end
print "Made with mlogx"
print "github.com/BalaM314/mlogx/"